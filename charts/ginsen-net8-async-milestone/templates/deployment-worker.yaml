apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ginsen-net8-async-milestone.fullname-worker" . }}
  labels:
    {{- include "ginsen-net8-async-milestone.labels-worker" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.worker.enabled }}
  replicas: {{ .Values.replicaCount.worker }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ginsen-net8-async-milestone.selectorLabels-worker" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.monitor.worker.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "52325"
        {{- with .Values.podAnnotations.worker }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- else }}
      annotations:
        {{- with .Values.podAnnotations.worker }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "ginsen-net8-async-milestone.labels-worker" . | nindent 8 }}
        {{- with .Values.podLabels.worker }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.monitor.worker.enabled }}
        dotnet-monitor.io/monitor: "true"
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ginsen-net8-async-milestone.serviceAccountName-worker" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext.worker | nindent 8 }}
      containers:
        {{- if .Values.monitor.worker.enabled }}
        - name: monitor
          image: mcr.microsoft.com/dotnet/monitor:8
          ports:
            - name: monitor
              containerPort: {{ .Values.monitor.worker.service.containerPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.monitor.worker.service.metricsContainerPort }}
              protocol: TCP
          # DO NOT use the --no-auth argument for deployments in production; this argument is used for demonstration
          # purposes only in this example. Please continue reading after this example for further details.
          args: [ "collect", "--no-auth" ]
          imagePullPolicy: Always
          env:
          - name: DOTNETMONITOR_DiagnosticPort__ConnectionMode
            value: Listen
          - name: DOTNETMONITOR_Storage__DefaultSharedPath
            value: /diag
          # ALWAYS use the HTTPS form of the URL for deployments in production; the removal of HTTPS is done for
          # demonstration purposes only in this example. Please continue reading after this example for further details.
          - name: DOTNETMONITOR_Urls
            value: http://localhost:52323
          # The metrics URL is set in the CMD instruction of the image by default. However, this deployment overrides that with the args setting; manually set the URL to the same value using configuration.
          - name: DOTNETMONITOR_Metrics__Endpoints
            value: http://+:52325
          {{- with .Values.volumeMountsMonitor.worker }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.monitor.worker.resources | nindent 12 }}
        {{- end }}
        - name: {{ .Chart.Name }}-worker
          securityContext:
            {{- toYaml .Values.securityContext.worker | nindent 12 }}
          image: "{{ .Values.image.repository.worker }}:{{ .Values.image.tag.worker | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range .Values.env.common }}
            - name: {{- .name }}
              value: {{- .value }}
            {{- end }}
            {{- range .Values.env.worker }}
            - name: {{- .name }}
              value: {{- .value }}
            {{- end }}
            {{- if .Values.monitor.worker.enabled }}
            - name: DOTNET_DiagnosticPorts
              value: /diag/dotnet-monitor.sock
            {{- end }}
          resources:
            {{- toYaml .Values.resources.worker | nindent 12 }}
          {{- if .Values.monitor.worker.enabled }}
          volumeMounts:
          {{- with .Values.volumeMounts.worker }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMountsMonitor.worker }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- else }}
          {{- with .Values.volumeMounts.worker }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- if .Values.monitor.worker.enabled }}
      volumes:
      {{- with .Values.volumes.worker }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumesMonitor.worker }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      {{- with .Values.volumes.worker }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector.worker }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity.worker }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations.worker }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
